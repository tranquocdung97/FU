import java.util.Scanner;
public class DemTanSoQuickSort {
    static void quickSort(int[] arr, int low, int high) {
        if (low < high) {
            int pi = partition(arr, low, high);
            quickSort(arr, low, pi - 1);
            quickSort(arr, pi + 1, high);
        }
    }
    private static int partition(int[] arr, int low, int high) {
        int pivot = arr[high];
        int i = low - 1;
        for (int j = low; j < high; j++) {
            if (arr[j] <= pivot) {
                i++;
                int temp = arr[i];
                arr[i] = arr[j];
                arr[j] = temp;
            }
        }
        int temp = arr[i + 1];
        arr[i + 1] = arr[high];
        arr[high] = temp;
        return i + 1;
    }
    static void countFrequency(int a[], int n) {
        quickSort(a, 0, n - 1);
        int count = 1;
        for (int i = 1; i < n; i++) {
            if (a[i] == a[i - 1]) {
                count++;
            } else {
                System.out.print(a[i - 1] + " " + count + "; ");
                count = 1;
            }
        }
        System.out.println(a[n - 1] + " " + count + ";");
    }
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print(" ");
        int n = scanner.nextInt();
        while (n <= 0) {
            System.out.print(" ");
            n = scanner.nextInt();
        }
        int[] arr = new int[n];
        System.out.println(" ");
        for (int i = 0; i < n; i++) {
            System.out.print(" ");
            arr[i] = scanner.nextInt();
        }
        System.out.print(" ");
        countFrequency(arr, n);
        scanner.close();
    }
}