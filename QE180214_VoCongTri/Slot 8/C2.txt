import java.util.Arrays;
import java.util.Scanner;

public class QuickSortStiffness {

    public static void quickSort(int[] arr, int low, int high) {
        if (low < high) {
            int pivot = partition(arr, low, high);
            quickSort(arr, low, pivot - 1);
            quickSort(arr, pivot + 1, high);
        }
    }

    private static int partition(int[] arr, int low, int high) {
        int pivot = arr[high];
        int i = low - 1;

        for (int j = low; j < high; j++) {
            if (arr[j] <= pivot) {
                i++;
                int temp = arr[i];
                arr[i] = arr[j];
                arr[j] = temp;
            }
        }

        int temp = arr[i + 1];
        arr[i + 1] = arr[high];
        arr[high] = temp;

        return i + 1;
    }

    public static int solve(int[] arr, int n) {
        Arrays.sort(arr);

        int stiffness = arr[n - 1];
        int count = 1;
        for (int i = n - 2; i >= 0; i--) {
            count++;
            stiffness--;
            if (stiffness > arr[i]) {
                stiffness = arr[i];
            }
            if (stiffness == 0) {
                return count;
            }
        }
        return n;
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] arr = new int[n];
        for (int i = 0; i < n; i++) {
            arr[i] = scanner.nextInt();
        }

        System.out.println(solve(arr, n));
        scanner.close();
    }
}