import java.util.Scanner;

public class Main{

public static Node insert(Node parent, int val) {
    if (parent == null) {
        Node temp = new Node();
        temp.key = val;
        return temp;
        }
        else {
            if (val<parent.key){
                parent.left = insert(parent.left,val);
                } else 
                {
                    parent.right = insert(parent.right,val);
                    }
                    return parent;
        }
}
                

public static void traverse (Node root) {
    if (root!=null) {
        traverse (root.left);
        System.out.print(root.key + " ");
        traverse (root.right);
    }
}

public static int[] input(Scanner sc){
    int n = sc.nextInt();
    int a[] = new int[n];
    for(int i = 0; i<n; i++){
        a[i] = sc.nextInt();
    }
    return a;
}

public static int degree (Node root){
    if (root==null) return -1;
    if (root.left==null&&root.right==null) return 0;
    return 1 + Math.max(degree(root.left),degree(root.right));
}

public static boolean checkAVL (Node root){
    if (root == null) return true;
    if (Math.abs(degree(root.left)-degree(root.right))>1) return false;
    return checkAVL(root.left) && checkAVL (root.right);
}

public static Node delete (Node p, int x){
    if(p==null) return null;
    if (p.key == x) {
        p = null;
        } else {
            p.left = delete (p.left,x);
            p.right = delete (p.right,x);
        }
        return p;
}

public static void main (String[] args) { 
    Scanner sc = new Scanner (System.in);
    int[] a = input(sc);
    BinaryTree t = new BinaryTree();
    for(int i = 0; i<a.length;i++) {
        t.root = insert(t.root, a[i]);
    }
    int x = sc.nextInt();
    t.root = delete(t.root,x);
    if(t.root==null) System.out.println("NULL");
    traverse(t.root);
}
}

class Node {
    int key;
    Node left;
    Node right;
}

class BinaryTree{
    Node root;
    
    BinaryTree(){
        root =null;
}
}