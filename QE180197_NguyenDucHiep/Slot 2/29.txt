import java.util.Scanner;
class Node {
    int data;
    Node next;
    Node pre;

    public Node(int x) {
        data = x;
        next = null;
        pre = null;
    }
}
class DoublyLinkedList {
    Node head;
    Node tail;

    public DoublyLinkedList() {
        head = null;
        tail = null;
    }

    public DoublyLinkedList addTail(int x) {
        Node temp = new Node(x);
        temp.next = null;
        temp.pre = tail;

        if (tail != null) {
            tail.next = temp;
        } else {
            head = temp;
        }

        tail = temp;
        return this;
    }
    public DoublyLinkedList deleteHead() {
        Node p = head.next;
        if (p != null) {
            p.pre = null;
            head = p;
        }
        return this;
    }
    public DoublyLinkedList deleteTail() {
        Node p = tail.pre;
        if (p != null) {
            p.next = null;
            tail = p;
        }
        return this;
    }
    public DoublyLinkedList deleteAt(int k) {
        Node p = head;
        for (int i = 0; i < k - 1 && p != null; i++) {
            p = p.next;
        }

        if (p != null && p.next != null) {
            Node temp = p.next;
            Node p2 = temp.next;
            p.next = p2;

            if (p2 != null) {
                p2.pre = p;
            }

            temp.next = null;
            temp.pre = null;
        }

        return this;
    }

    public void printList() {
        Node p = head;
        while (p != null) {
            System.out.print(p.data + " ");
            p = p.next;
        }
    }
}
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();
        int x = sc.nextInt();

        DoublyLinkedList doublyLinkedList = new DoublyLinkedList();
        doublyLinkedList.head = new Node(x);
        doublyLinkedList.tail = doublyLinkedList.head;

        for (int i = 1; i < n; i++) {
            x = sc.nextInt();
            doublyLinkedList.addTail(x);
        }

        int k = sc.nextInt();

        if (k == 0) {
            doublyLinkedList.deleteHead();
        } else if (k == n - 1) {
            doublyLinkedList.deleteTail();
        } else {
            doublyLinkedList.deleteAt(k);
        }

        doublyLinkedList.printList();
    }
}